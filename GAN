# -*- coding: utf-8 -*-
"""
GAN-based Steganography Example
Mirrors LSB workflow with SSIM, PSNR, and detection accuracy
"""

from steganogan import SteganoGAN
from PIL import Image
import numpy as np
from skimage.metrics import structural_similarity as ssim
from skimage.metrics import peak_signal_noise_ratio as psnr
import os

# -----------------------
# SSIM and PSNR Functions
# -----------------------
def compute_ssim(original_path, stego_path):
    original = np.array(Image.open(original_path).convert("RGB"))
    stego = np.array(Image.open(stego_path).convert("RGB"))
    value = ssim(original, stego, channel_axis=-1)
    print(f"SSIM: {value:.4f}")

def compute_psnr(original_path, stego_path):
    original = np.array(Image.open(original_path).convert("RGB"))
    stego = np.array(Image.open(stego_path).convert("RGB"))
    value = psnr(original, stego)
    print(f"PSNR: {value:.2f} dB")

    # -----------------------
# Detection Accuracy
# -----------------------
def detection_accuracy(original_message, decoded_message):
    correct = sum(o == d for o, d in zip(original_message, decoded_message))
    return (correct / len(original_message)) * 100

# -----------------------
# Main GAN Stego Workflow
# -----------------------

# Load the GAN model
model = SteganoGAN.load(architecture='dense', epoch=50)